# Generated by Django 3.2.6 on 2024-10-17 00:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mapApp', '0002_mi_modelo'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorizedUsers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('license_number', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='geojson',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='properties',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='type',
            field=models.CharField(default='Point', max_length=50),
        ),
        migrations.AddField(
            model_name='macronutrients',
            name='analysis_method',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='macronutrients',
            name='carbonates',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='macronutrients',
            name='cation_exchange_capacity',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='macronutrients',
            name='conductividad_electrica',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='micronutrients',
            name='analysis_method',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='organicmatter',
            name='analysis_method',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='phlevel',
            name='analysis_method',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='phlevel',
            name='ph_kcl',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='physicalproperties',
            name='carbonates',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='physicalproperties',
            name='real_density',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='area',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='bases_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='cic_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='crop_type',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='drainage',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='establishment',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='farm_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='fertilization_history',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='lot_number',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='micronutrients_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='nitrogen_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='number_of_subsamples',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='ph_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='phosphorus_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='potassium_done',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='previous_analysis_url',
            field=models.URLField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='previous_comments',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='registered_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='relief',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='sample_conditions',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='sampling_pattern',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='sampling_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='soil_depth',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='soil_use',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='topography',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='total_samples',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='soilfertility',
            name='validated',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='macronutrients',
            name='soil_fertility',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility'),
        ),
        migrations.AlterField(
            model_name='micronutrients',
            name='soil_fertility',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility'),
        ),
        migrations.AlterField(
            model_name='organicmatter',
            name='soil_fertility',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility'),
        ),
        migrations.AlterField(
            model_name='phlevel',
            name='soil_fertility',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility'),
        ),
        migrations.AlterField(
            model_name='physicalproperties',
            name='drainage',
            field=models.CharField(choices=[('very_poor', 'Very Poor'), ('poor', 'Poor'), ('moderate', 'Moderate'), ('well', 'Well')], max_length=50),
        ),
        migrations.AlterField(
            model_name='physicalproperties',
            name='soil_fertility',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility'),
        ),
        migrations.AlterField(
            model_name='soilfertility',
            name='region',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='ValidationLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('validation_date', models.DateTimeField(auto_now_add=True)),
                ('authorized_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapApp.authorizedusers')),
                ('soil_fertility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility')),
            ],
        ),
        migrations.CreateModel(
            name='SoilSampling',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_sampling', models.DateField()),
                ('weather_conditions', models.CharField(blank=True, max_length=50, null=True)),
                ('sampling_pattern', models.CharField(max_length=100)),
                ('sample_type', models.CharField(max_length=100)),
                ('sub_samples_count', models.IntegerField()),
                ('previous_soil_use', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('reception_date', models.DateField()),
                ('soil_fertility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility')),
            ],
        ),
        migrations.CreateModel(
            name='SoilProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('horizon', models.CharField(max_length=5)),
                ('depth_range', models.CharField(max_length=50)),
                ('texture', models.CharField(max_length=50)),
                ('structure', models.CharField(max_length=50)),
                ('bulk_density', models.FloatField()),
                ('carbonates', models.FloatField(blank=True, null=True)),
                ('activity_biological', models.CharField(max_length=50)),
                ('soil_fertility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapApp.soilfertility')),
            ],
        ),
    ]
